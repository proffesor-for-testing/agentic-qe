name: "Agentic QE Framework Configuration"
version: "1.0.0"
description: "Configuration for intelligent Quality Engineering automation"

# Framework Settings
framework:
  name: "agentic-qe"
  version: "1.0.0"
  mode: "intelligent"
  coordination: "claude-flow"
  parallel_execution: true
  memory_persistence: true

# Agent Configuration
agents:
  test-planner:
    enabled: true
    priority: "high"
    max_concurrent_tasks: 3
    memory_namespace: "qe/test-plans"
    capabilities:
      - "strategic-planning"
      - "risk-assessment"
      - "test-prioritization"
      - "coverage-analysis"
    default_options:
      coverage_target: 85
      risk_level: "medium"
      platforms: ["web", "api"]

  test-generator:
    enabled: true
    priority: "high"
    max_concurrent_tasks: 5
    memory_namespace: "qe/generated-tests"
    capabilities:
      - "test-generation"
      - "mock-creation"
      - "data-generation"
      - "multi-framework-support"
    default_options:
      framework: "jest"
      test_type: "unit"
      generate_mocks: true
      realistic_data: true
    supported_frameworks:
      unit: ["jest", "mocha", "vitest", "pytest"]
      integration: ["jest", "mocha", "pytest", "testcontainers"]
      e2e: ["cypress", "playwright", "puppeteer", "selenium"]
      performance: ["artillery", "k6", "jmeter"]
      api: ["postman", "newman", "rest-assured"]

  test-runner:
    enabled: true
    priority: "medium"
    max_concurrent_tasks: 8
    memory_namespace: "qe/test-results"
    capabilities:
      - "parallel-execution"
      - "smart-retry"
      - "environment-management"
      - "performance-monitoring"
    default_options:
      parallel: true
      retry_flaky: true
      coverage: true
      environments: ["dev"]
    execution_strategies:
      parallel:
        max_workers: 4
        timeout: 600000
        resource_limit: "4GB"
      retry:
        max_attempts: 3
        backoff_strategy: "exponential"
        retry_delay: 1000

  test-analyzer:
    enabled: true
    priority: "medium"
    max_concurrent_tasks: 2
    memory_namespace: "qe/analysis-results"
    capabilities:
      - "coverage-analysis"
      - "performance-analysis"
      - "quality-assessment"
      - "trend-analysis"
    default_options:
      coverage_threshold: 80
      analyze_trends: true
      suggest_improvements: true
      comprehensive_analysis: true
    analysis_types:
      coverage:
        thresholds:
          line: 80
          branch: 75
          function: 85
          statement: 80
      performance:
        metrics: ["execution_time", "memory_usage", "cpu_usage"]
        baseline_comparison: true
      quality:
        metrics: ["maintainability", "complexity", "duplication"]

  qe-coordinator:
    enabled: true
    priority: "critical"
    max_concurrent_tasks: 1
    memory_namespace: "qe/orchestration"
    capabilities:
      - "workflow-orchestration"
      - "agent-coordination"
      - "quality-gates"
      - "resource-management"
    default_options:
      parallel_execution: true
      enforce_quality_gates: true
      auto_scaling: true

# Quality Gates Configuration
quality_gates:
  enabled: true
  strict_enforcement: true

  gates:
    coverage:
      type: "threshold"
      metric: "line_coverage"
      threshold: 85
      operator: ">="
      blocking: true
      auto_fix: true

    performance:
      type: "baseline"
      metric: "execution_time"
      tolerance: 0.1  # 10% slower than baseline
      blocking: true
      auto_fix: false

    security:
      type: "scan"
      tools: ["snyk", "semgrep", "bandit"]
      severity_threshold: "medium"
      blocking: true
      auto_fix: false

    quality:
      type: "composite"
      metrics:
        - name: "complexity"
          threshold: 10
          weight: 0.3
        - name: "duplication"
          threshold: 3
          weight: 0.4
        - name: "maintainability"
          threshold: 70
          weight: 0.3
      blocking: false

# Test Environments
environments:
  local:
    enabled: true
    priority: "high"
    base_url: "http://localhost:3000"
    database_url: "sqlite:///:memory:"
    parallel_tests: true

  dev:
    enabled: true
    priority: "high"
    base_url: "${DEV_BASE_URL}"
    database_url: "${DEV_DATABASE_URL}"
    api_key: "${DEV_API_KEY}"
    parallel_tests: true

  staging:
    enabled: true
    priority: "medium"
    base_url: "${STAGING_BASE_URL}"
    database_url: "${STAGING_DATABASE_URL}"
    api_key: "${STAGING_API_KEY}"
    parallel_tests: false
    performance_baseline: true

  prod:
    enabled: false
    priority: "critical"
    base_url: "${PROD_BASE_URL}"
    read_only: true
    smoke_tests_only: true

# Test Suites Configuration
test_suites:
  unit:
    pattern: "**/*.test.{js,ts}"
    timeout: 30000
    parallel: true
    coverage: true
    frameworks: ["jest", "vitest", "mocha"]

  integration:
    pattern: "**/*.integration.{js,ts}"
    timeout: 60000
    parallel: false
    setup_teardown: true
    frameworks: ["jest", "pytest"]

  e2e:
    pattern: "**/*.e2e.{js,ts}"
    timeout: 120000
    parallel: false
    headless: true
    frameworks: ["cypress", "playwright"]

  performance:
    pattern: "**/*.perf.{js,ts}"
    timeout: 300000
    parallel: false
    baseline_comparison: true
    frameworks: ["artillery", "k6"]

  security:
    pattern: "**/*.security.{js,ts}"
    timeout: 180000
    parallel: false
    frameworks: ["jest", "owasp-zap"]

# Reporting Configuration
reporting:
  enabled: true
  formats: ["html", "json", "junit"]
  output_directory: "./reports/qe"

  coverage:
    enabled: true
    formats: ["html", "lcov", "json"]
    output_directory: "./reports/coverage"

  performance:
    enabled: true
    formats: ["html", "json"]
    baseline_storage: "./baselines/performance"

  quality:
    enabled: true
    formats: ["html", "json", "sonar"]
    trend_analysis: true

# Integration Settings
integrations:
  claude_code:
    enabled: true
    task_coordination: true
    memory_sharing: true
    hooks_integration: true

  claude_flow:
    enabled: true
    swarm_coordination: true
    neural_training: true
    performance_optimization: true

  ci_cd:
    enabled: true
    platforms: ["github-actions", "gitlab-ci", "jenkins"]
    quality_gates: true
    failure_notifications: true

  github:
    enabled: true
    pr_integration: true
    issue_creation: true
    status_checks: true

# Memory and Caching
memory:
  enabled: true
  persistence: true
  ttl: 86400  # 24 hours
  namespaces:
    - "qe/test-plans"
    - "qe/generated-tests"
    - "qe/test-results"
    - "qe/analysis-results"
    - "qe/orchestration"
    - "qe/quality-gates"

cache:
  enabled: true
  type: "redis"
  ttl: 3600  # 1 hour
  keys:
    - "test-results"
    - "coverage-data"
    - "performance-baselines"

# Hooks Configuration
hooks:
  enabled: true

  pre_operations:
    - name: "validate_environment"
      enabled: true
      timeout: 30000
    - name: "prepare_resources"
      enabled: true
      timeout: 60000
    - name: "backup_baselines"
      enabled: true
      timeout: 30000

  post_operations:
    - name: "cleanup_resources"
      enabled: true
      timeout: 30000
    - name: "update_metrics"
      enabled: true
      timeout: 15000
    - name: "notify_stakeholders"
      enabled: true
      timeout: 10000

# Performance and Scaling
performance:
  max_parallel_agents: 8
  max_parallel_tests: 16
  memory_limit: "8GB"
  cpu_limit: "4"
  timeout_multiplier: 1.5

scaling:
  auto_scaling: true
  min_agents: 1
  max_agents: 10
  scale_up_threshold: 0.8
  scale_down_threshold: 0.3

# Logging and Monitoring
logging:
  level: "info"
  format: "json"
  output: ["console", "file"]
  file_path: "./logs/agentic-qe.log"
  rotation: "daily"

monitoring:
  enabled: true
  metrics:
    - "test_execution_time"
    - "coverage_percentage"
    - "failure_rate"
    - "agent_utilization"
  dashboards:
    - "qe-overview"
    - "test-health"
    - "performance-trends"

# Security Settings
security:
  enabled: true
  api_key_rotation: true
  sensitive_data_masking: true
  audit_logging: true
  vulnerability_scanning: true